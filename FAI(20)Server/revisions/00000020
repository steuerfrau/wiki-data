= Installation =

Used tutorial from:

http://fai-project.org/fai-guide/#_a_id_setup_a_setup_your_faiserver

== Packages ==
On Debian 8 (Jessie)

{{{#!highlight
aptitude install fai-quickstart
# maybe fai-setup-storage
}}}

== Setup DHCP Server ==

{{{#!highlight
default-lease-time 600;
max-lease-time 7200;

allow booting;

# in this example, we serve DHCP requests from 192.168.0.(3 to 253)
# and we have a router at 192.168.0.1

subnet 192.168.110.0 netmask 255.255.255.0 {
  range 192.168.110.200 192.168.110.220;
  option broadcast-address 192.168.110.255;
  option routers 192.168.110.1;             # our router
  option domain-name-servers 192.168.110.58; # our router, again
  option domain-name "hoppetosse.loc";
  # option time-servers someserver;
  # option ntp-servers someserver;

  # filename "pxelinux.0"; # (this we will provide later)


  group {
  ### Debian PXE Installer ###

    filename "pxelinux.0";
    next-server 192.168.110.58;             # mel01misc01 

    # host mel01testpxe01 {
    #    hardware ethernet 52:54:00:11:00:40;
    #    fixed-address mel01testpxe01;
    #    option host-name "mel01testpxe01";
    # }
  }

  group {
  ### FAI ###
    server-name mel01deploy03;
    next-server mel01deploy03.hoppetosse.loc;
    filename "fai/pxelinux.0";

    host mel01testpxe01 {
       hardware ethernet 52:54:00:11:00:40;
       fixed-address mel01testpxe01;
       option host-name "mel01testpxe01";
    }

    host juno {
       hardware ethernet 00:1C:C0:13:9A:55;
       fixed-address juno;
       option host-name "juno";
    }

  }

}

}}}
= Configuration of FAI Server =

Setup NFS Root Filesystem with
{{{
fai-setup -v
}}}

Create individual configurations using:
{{{#!highlight
fai-chboot -IFv -u nfs://faiserver/srv/fai/config demohost
}}}

The autogenerated files at /srv/tftp/fai/pxelinux.cfg/hostname did not work for me. NFS was not beeing mounted. Following configuration worked:
{{{#!highlight
# generated by fai-chboot for host mel01testpxe01 with IP 192.168.110.40
default fai-generated

label fai-generated
kernel vmlinuz-3.16.0-4-amd64
append initrd=initrd.img-3.16.0-4-amd64 ip=dhcp  root=/dev/nfs nfsroot=192.168.110.57:/srv/fai/nfsroot aufs  FAI_FLAGS=verbose,sshd,createvt FAI_CONFIG_SRC=nfs://192.168.110.57/srv/fai/config FAI_ACTION=install
}}}

= Define Custom Partitioning Scheme =
== Define a Class for that Partitioning Scheme ==
Define custom scheme in /srv/fai/config/class/50-host-classes
{{{#!highlight
#! /bin/bash

# assign classes to hosts

# use a list of classes for our demo machine
case $HOSTNAME in
    mel01testpxe01)
        echo "FAIBASE DEBIAN DHCP HOPPETOSSE_CLUSTER_KVM CRYPT_BOOT MEL_PKGS" ;;
        # echo "HOPPETOSSE_CLUSTER_TST DEBIAN_HPT_PCM DHCP" ;;
    juno)
        echo "FAIBASE DEBIAN DHCP HOPPETOSSE_CLUSTER_METAL" ;;
    faiserver)
        echo "FAIBASE DEBIAN DHCPC DEMO FAISERVER" ;;
    demohost|client*)
        echo "FAIBASE DEBIAN DHCPC DEMO" ;;
    xfcehost)
        echo "FAIBASE DEBIAN DHCPC DEMO XORG XFCE";;
    gnomehost)
        echo "FAIBASE DEBIAN DHCPC DEMO XORG GNOME";;
    bear)
        echo "FAIBASE DEBIAN DHCPC LVM_XEN_SERVER XEN" ;;
    puma)
        echo "FAIBASE DEBIAN DHCPC RAID_XEN_VIRTUAL" ;;
    centos)
        echo "FAIBASE CENTOS"   # you may want to add class XORG here
        ifclass I386 && echo CENTOS6_32
        ifclass AMD64 && echo CENTOS6_64
        exit 0 ;; # CentOS does not use the GRUB class
    slchost)
        # Scientific Linux Cern, is very similar to CentOS. SLC should alsways use the class CENTOS
        echo "FAIBASE CENTOS SLC"  # you may want to add class XORG here
        ifclass I386 && echo SLC6_32
        ifclass AMD64 && echo SLC6_64
        exit 0 ;; # CentOS/SLC does not use the GRUB class
    *)
        echo "FAIBASE DEBIAN DHCPC" ;;
esac

ifclass -o I386 AMD64 && echo GRUB_PC
exit 0

}}}

Leave out following step!
{{{#!highlight
# cd /srv/fai/config/class
# cp FAIBASE.var HOPPETOSSE_CLUSTER_TST.var
}}}

Create partitioning scheme in /srv/fai/config/disk_config/HOPPETOSSE_CLUSTER_KVM
{{{#!highlight
# example of new config file for setup-storage
#
# <type> <mountpoint> <size>   <fs type> <mount options> <misc options>

# disklabel:gpt-bios implicitly creates a BIOS boot partition after the here listed
# partitions. The actual disk will contain one more partition than configured here.

disk_config disk1 disklabel:gpt-bios bootable:1 fstabkey:uuid

primary -        2G            -    -
primary -        500G-100%     -    -

disk_config disk2 disklabel:gpt-bios bootable:1 fstabkey:uuid

primary -         2G          -    -
primary -         500G-100%   -    -

disk_config raid

raid1   /boot sda1,sdb1 ext4 rw,noatime
raid1   -     sda2,sdb2 - -

disk_config cryptsetup

luks:"secret" - md1 - -
# # createopts="âˆ’m 0"

disk_config lvm

vg Hoppetosse md1
Hoppetosse-Root /      2G     ext4 rw
Hoppetosse-Usr  /usr   4G     ext4 rw
Hoppetosse-Tmp  /tmp   2G     ext4 rw
Hoppetosse-Var  /var   3G     ext4 rw
Hoppetosse-Home /home  5G     ext4 rw
Hoppetosse-Swap swap   512    swap sw

}}}

= Add Cryptsetup to NFS Root =
On FAI server create /etc/fai/nfsroot-hooks/40-cryptsetup with content:
{{{#!highlight
#!/bin/bash

chroot /srv/fai/nfsroot aptitude -y install cryptsetup 
chroot /srv/fai/nfsroot aptitude -y install cryptsetup-bin
}}}
And update NFS root filesystem with:
{{{#!highlight

sudo fai-make-nfsroot -k
}}}

== Install Neccessary Packages for Booting ==

Add the last two sections to 

{{{
PACKAGES aptitude I386
linux-image-686 initramfs-tools
memtest86+

PACKAGES aptitude CHROOT
linux-image-686-
linux-image-amd64-

PACKAGES aptitude AMD64
linux-image-amd64 initramfs-tools
memtest86+

PACKAGES aptitude XEN
linux-image-amd64 initramfs-tools

PACKAGES aptitude DHCPC
isc-dhcp-client

PACKAGES aptitude GRUB_PC
grub-pc grub-legacy- lilo-

PACKAGES aptitude CRYPT_BOOT
mdadm
cryptsetup 
cryptsetup-bin
lvm2

PACKAGES aptitude MEL_PKGS
man
screen
sudo 
vim
wget

}}}
= Hints =
== Manually Run Partitioning on Client ==
{{{#!highlight
setup-storage -X -f /var/lib/fai/config/disk_config/<NAME>
}}}

== Set Default Root Password ==

Content of: /srv/fai/config/class/FAIBASE.var
{{{
# default values for installation. You can override them in your *.var files

# allow installation of packages from unsigned repositories
FAI_ALLOW_UNSIGNED=1

# Set UTC=yes if your system clock is set to UTC (GMT), and UTC=no if not.
UTC=yes
TIMEZONE=Europe/Berlin

# root password for the new installed linux system; md5 and crypt are possible
# pw is "fai"
# ROOTPW='$1$kBnWcO.E$djxB128U7dMkrltJHPf6d1'
# pw is secret
ROOTPW='$1$QGIcGh7Y$M.QQOnWi36W9Zq70lD.ti/'


# errors in tasks greater than this value will cause the installation to stop
STOP_ON_ERROR=700

# set parameter for install_packges(8)
MAXPACKAGES=300

}}}

== German Keymaps ==
Content of: /srv/fai/config/class/DEBIAN.var
{{{
CONSOLEFONT=
KEYMAP=us-latin1

# MODULESLIST contains modules that will be loaded by the new system,
# not during installation these modules will be written to /etc/modules
# If you need a module during installation, add it to $kernelmodules
# in 20-hwdetect.source.
MODULESLIST="usbhid psmouse"

# if you have enough RAM (>2GB) you may want to enable this line. It
# also puts /var/cache into a ramdisk.
#FAI_RAMDISKS:="$target/var/lib/dpkg $target/var/cache/apt"

# if you want to use the faiserver as APT proxy
#APTPROXY=http://faiserver:3142

}}}
     Messages sorted by: [ date ] [ thread ] [ subject ] [ author ]

Hi!

We had a similar problem with locales and console-data / console-common and
the problem seems to be that if locales are installed via apt-get or
aptitude
the default locale is set to none and all debconf settings are overwritten.
Also /etc/default/locale is empty afterwards (Quite a strange imho)

Our solution was to add the script 60-reconfigure in scripts to LAST:

----
if ifclass 'GERMAN'
then
    echo "locales locales/default_environment_locale select de_DE.UTF-8" |
\
        $ROOTCMD debconf-set-selection -v
    $ROOTCMD update-locale LANG=de_DE.UTF-8
fi

$ROOTCMD dpkg-reconfigure -f noninteractive locales

Regards,
----
Kai

== Boot GPT from BIOS ==
My BIOS needed the following correction on the disk:
{{{
parted /dev/sda disk_toggle pmbr_boot
parted /dev/sdb disk_toggle pmbr_boot
}}}

== Password Problems Workaround ==
Should no longer be necessary. Bug in configuration corrected.
On host, after installation succeeded execute:
{{{#!highlight
chroot /target passwd
# chroot /target adduser melly
# chroot /target usermod -a -G sudo melly
}}}
